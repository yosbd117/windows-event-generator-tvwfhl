<Window x:Class="EventSimulator.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:EventSimulator.UI"
        mc:Ignorable="d"
        Title="Windows Event Simulator"
        Height="768" Width="1024"
        MinHeight="600" MinWidth="800"
        WindowStartupLocation="CenterScreen"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{materialDesign:MaterialDesignFont}"
        AutomationProperties.Name="Windows Event Simulator"
        AutomationProperties.AutomationId="MainWindow">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Styles.xaml"/>
                <ResourceDictionary Source="Resources/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel>
        <!-- Main Menu -->
        <Menu DockPanel.Dock="Top" Style="{StaticResource MaterialDesignMenu}"
              AutomationProperties.Name="Main Menu">
            <MenuItem Header="_File">
                <MenuItem Header="_New Template" Command="{Binding CreateTemplateCommand}">
                    <MenuItem.Icon>
                        <Path Data="{StaticResource AddIcon}" Fill="{DynamicResource IconBrush.Light}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Import" Command="{Binding ImportTemplatesCommand}">
                    <MenuItem.Icon>
                        <Path Data="{StaticResource ImportIcon}" Fill="{DynamicResource IconBrush.Light}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Export" Command="{Binding ExportTemplatesCommand}">
                    <MenuItem.Icon>
                        <Path Data="{StaticResource ExportIcon}" Fill="{DynamicResource IconBrush.Light}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="E_xit" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="_Theme">
                    <MenuItem Header="_Light" IsCheckable="True" IsChecked="{Binding IsLightTheme}"/>
                    <MenuItem Header="_Dark" IsCheckable="True" IsChecked="{Binding IsDarkTheme}"/>
                    <MenuItem Header="_High Contrast" IsCheckable="True" IsChecked="{Binding IsHighContrastTheme}"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About"/>
            </MenuItem>
        </Menu>

        <!-- Navigation Pane -->
        <Grid DockPanel.Dock="Left" Width="200" Background="{DynamicResource MaterialDesignPaper}"
              AutomationProperties.Name="Navigation">
            <StackPanel>
                <Button Style="{StaticResource MaterialDesignFlatButton}"
                        Command="{Binding NavigateToEventGeneratorCommand}"
                        Height="48" HorizontalContentAlignment="Left">
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{StaticResource EventIcon}" 
                              Fill="{DynamicResource IconBrush.Light}"
                              Width="24" Height="24" Margin="0,0,12,0"/>
                        <TextBlock Text="Event Generator"/>
                    </StackPanel>
                </Button>
                <Button Style="{StaticResource MaterialDesignFlatButton}"
                        Command="{Binding NavigateToTemplateManagerCommand}"
                        Height="48" HorizontalContentAlignment="Left">
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{StaticResource TemplateIcon}"
                              Fill="{DynamicResource IconBrush.Light}"
                              Width="24" Height="24" Margin="0,0,12,0"/>
                        <TextBlock Text="Template Manager"/>
                    </StackPanel>
                </Button>
                <Button Style="{StaticResource MaterialDesignFlatButton}"
                        Command="{Binding NavigateToScenarioBuilderCommand}"
                        Height="48" HorizontalContentAlignment="Left">
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{StaticResource ScenarioIcon}"
                              Fill="{DynamicResource IconBrush.Light}"
                              Width="24" Height="24" Margin="0,0,12,0"/>
                        <TextBlock Text="Scenario Builder"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Main Content Area -->
        <Grid DockPanel.Dock="Bottom" Height="24" Background="{DynamicResource MaterialDesignPaper}">
            <StatusBar Style="{StaticResource StatusBarStyle}">
                <StatusBarItem>
                    <TextBlock Text="{Binding StatusMessage}"
                             AutomationProperties.Name="Status Message"/>
                </StatusBarItem>
                <StatusBarItem HorizontalAlignment="Right">
                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                                IsIndeterminate="{Binding IsBusy}"
                                Width="16" Height="16"
                                Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"
                                AutomationProperties.Name="Progress Indicator"/>
                </StatusBarItem>
            </StatusBar>
        </Grid>

        <!-- Content Area -->
        <materialDesign:DialogHost>
            <materialDesign:DrawerHost>
                <Grid>
                    <ContentControl Content="{Binding CurrentView}"
                                  AutomationProperties.Name="Main Content Area"
                                  Focusable="False">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>

                    <!-- Overlay for busy state -->
                    <Rectangle Fill="{DynamicResource MaterialDesignPaper}"
                              Opacity="0.5"
                              Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    
                    <materialDesign:Card Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Padding="16">
                        <StackPanel Orientation="Horizontal">
                            <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                                        IsIndeterminate="True"
                                        Width="24" Height="24"
                                        Margin="0,0,16,0"/>
                            <TextBlock Text="Processing..."
                                     VerticalAlignment="Center"/>
                        </StackPanel>
                    </materialDesign:Card>
                </Grid>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>
    </DockPanel>
</Window>